{"ast":null,"code":"var _jsxFileName = \"E:\\\\Demo\\\\2\\\\quanlysanbonghienhoa\\\\src\\\\Pages\\\\Admin\\\\ManagePitchTypes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { PitchTypeAPI } from '../../API/API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManagePitchTypes = () => {\n  _s();\n  const [pitchTypes, setPitchTypes] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [currentPitchType, setCurrentPitchType] = useState(null);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Lấy danh sách loại sân\n  const fetchPitchTypes = async () => {\n    try {\n      const data = await PitchTypeAPI.GetAll();\n      setPitchTypes(data);\n    } catch (err) {\n      setError(err.message || 'Không thể tải danh sách loại sân.');\n    }\n  };\n  // Xử lý mở modal (thêm mới hoặc chỉnh sửa)\n  const handleShowModal = (pitchType = null) => {\n    setCurrentPitchType(pitchType);\n    setShowModal(true);\n    setError('');\n    setSuccess('');\n  };\n\n  // Xử lý đóng modal\n  const handleCloseModal = () => {\n    setCurrentPitchType(null);\n    setShowModal(false);\n  };\n\n  // Xử lý thêm hoặc cập nhật loại sân\n  const handleSave = async () => {\n    try {\n      if (currentPitchType.id) {\n        // Cập nhật loại sân\n        await PitchTypeAPI.UpdatePitchType(currentPitchType.id, currentPitchType);\n        setSuccess('Cập nhật loại sân thành công.');\n      } else {\n        // Thêm mới loại sân\n        await PitchTypeAPI.CreatePitchType(currentPitchType);\n        setSuccess('Thêm loại sân thành công.');\n      }\n      fetchPitchTypes(); // Làm mới danh sách loại sân\n      handleCloseModal();\n    } catch (err) {\n      setError(err.message || 'Không thể lưu loại sân.');\n    }\n  };\n\n  // Xử lý xóa loại sân\n  const handleDelete = async id => {\n    if (window.confirm('Bạn có chắc chắn muốn xóa loại sân này không?')) {\n      try {\n        await PitchTypeAPI.DeletePitchType(id);\n        setSuccess('Xóa loại sân thành công.');\n        fetchPitchTypes();\n      } catch (err) {\n        setError(err.message || 'Không thể xóa loại sân.');\n      }\n    }\n  };\n\n  // Cập nhật thông tin loại sân trong modal\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentPitchType({\n      ...currentPitchType,\n      [name]: value\n    });\n  };\n\n  // Lấy dữ liệu khi component được mount\n  useEffect(() => {\n    fetchPitchTypes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Qu\\u1EA3n l\\xFD lo\\u1EA1i s\\xE2n\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(ManagePitchTypes, \"PrKAx6c7UgMuMRuM0KQ+wYkELRU=\");\n_c = ManagePitchTypes;\nexport default ManagePitchTypes;\nvar _c;\n$RefreshReg$(_c, \"ManagePitchTypes\");","map":{"version":3,"names":["React","useState","PitchTypeAPI","jsxDEV","_jsxDEV","ManagePitchTypes","_s","pitchTypes","setPitchTypes","showModal","setShowModal","currentPitchType","setCurrentPitchType","error","setError","success","setSuccess","fetchPitchTypes","data","GetAll","err","message","handleShowModal","pitchType","handleCloseModal","handleSave","id","UpdatePitchType","CreatePitchType","handleDelete","window","confirm","DeletePitchType","handleChange","e","name","value","target","useEffect","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Demo/2/quanlysanbonghienhoa/src/Pages/Admin/ManagePitchTypes.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { PitchTypeAPI } from '../../API/API';\r\n\r\nconst ManagePitchTypes = () => {\r\n  const [pitchTypes, setPitchTypes] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [currentPitchType, setCurrentPitchType] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  // Lấy danh sách loại sân\r\n  const fetchPitchTypes = async () => {\r\n    try {\r\n      const data = await PitchTypeAPI.GetAll();\r\n      setPitchTypes(data);\r\n    } catch (err) {\r\n      setError(err.message || 'Không thể tải danh sách loại sân.');\r\n    }\r\n  };\r\n  // Xử lý mở modal (thêm mới hoặc chỉnh sửa)\r\n  const handleShowModal = (pitchType = null) => {\r\n    setCurrentPitchType(pitchType);\r\n    setShowModal(true);\r\n    setError('');\r\n    setSuccess('');\r\n  };\r\n\r\n  // Xử lý đóng modal\r\n  const handleCloseModal = () => {\r\n    setCurrentPitchType(null);\r\n    setShowModal(false);\r\n  };\r\n\r\n  // Xử lý thêm hoặc cập nhật loại sân\r\n  const handleSave = async () => {\r\n    try {\r\n      if (currentPitchType.id) {\r\n        // Cập nhật loại sân\r\n        await PitchTypeAPI.UpdatePitchType(currentPitchType.id, currentPitchType);\r\n        setSuccess('Cập nhật loại sân thành công.');\r\n      } else {\r\n        // Thêm mới loại sân\r\n        await PitchTypeAPI.CreatePitchType(currentPitchType);\r\n        setSuccess('Thêm loại sân thành công.');\r\n      }\r\n      fetchPitchTypes(); // Làm mới danh sách loại sân\r\n      handleCloseModal();\r\n    } catch (err) {\r\n      setError(err.message || 'Không thể lưu loại sân.');\r\n    }\r\n  };\r\n\r\n  // Xử lý xóa loại sân\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Bạn có chắc chắn muốn xóa loại sân này không?')) {\r\n      try {\r\n        await PitchTypeAPI.DeletePitchType(id);\r\n        setSuccess('Xóa loại sân thành công.');\r\n        fetchPitchTypes();\r\n      } catch (err) {\r\n        setError(err.message || 'Không thể xóa loại sân.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Cập nhật thông tin loại sân trong modal\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentPitchType({ ...currentPitchType, [name]: value });\r\n  };\r\n\r\n  // Lấy dữ liệu khi component được mount\r\n  useEffect(() => {\r\n    fetchPitchTypes();\r\n  }, []);\r\n  \r\n  return (\r\n    <h2>Quản lý loại sân</h2>\r\n  )\r\n}\r\n\r\nexport default ManagePitchTypes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}